{"ast":null,"code":"var _jsxFileName = \"/Users/alouisa/Desktop/react-udemy-projects/DummyAuthApp/src/components/Login/Login.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport AuthContext from '../../store/auth-context';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Input from '../UI/Input/Input';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type == 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n\n  if (action.type == 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type == 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 6\n    };\n  }\n\n  if (action.type == 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: '',\n    isValid: false\n  });\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  const authCtx = useContext(AuthContext);\n  useEffect(_s(() => {\n    _s();\n\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, \"ooKQCLNXcyO+sbTEMp0ZPxRpehw=\"), [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = event => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); //   setFormIsValid(\n    //     event.target.value.includes('@') && passwordState.value.trim().length > 6\n    //   );\n  };\n\n  const passwordChangeHandler = event => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    }); //setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: 'INPUT_BLUR'\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n      //focus on first invalid input found\n      emailInputRef.current.focu();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailInputRef,\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: passwordInputRef,\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Login, \"UhkgmCNZ5YDplOAMIXtVjNRlzz0=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","AuthContext","Card","classes","Input","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","authCtx","identifier","setTimeout","console","log","emailInputRef","passwordInputRef","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","focu","focus","login","actions","btn"],"sources":["/Users/alouisa/Desktop/react-udemy-projects/DummyAuthApp/src/components/Login/Login.js"],"sourcesContent":["import React, { \n  useState, \n  useEffect, \n  useReducer, \n  useContext, \n  useRef,\n} from 'react';\n\nimport AuthContext from '../../store/auth-context';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Input from '../UI/Input/Input'\nimport Button from '../UI/Button/Button';\n\nconst emailReducer = (state, action) => {\n  if(action.type == 'USER_INPUT'){\n    return {value: action.val, isValid: action.val.includes('@')};\n  }\n  if(action.type == 'INPUT_BLUR'){\n    return {value: state.value, isValid: state.value.includes('@')};\n  }\n  return {value: '', isValid: false};\n};\n\nconst passwordReducer = (state, action) => {\n  if(action.type == 'USER_INPUT'){\n    return {value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if(action.type == 'INPUT_BLUR'){\n    return {value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return {value: '', isValid: false};\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '', isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {value: '', isValid: false});\n  \n  const { isValid: emailIsValid} = emailState;\n  const { isValid: passwordIsValid} = passwordState;\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log('Checking form validity!');\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      );\n    }, 500);\n\n    const emailInputRef = useRef();\n    const passwordInputRef = useRef();\n\n    return () => {\n      console.log('CLEANUP');\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    dispatchEmail({type: 'USER_INPUT', val: event.target.value});\n\n  //   setFormIsValid(\n  //     event.target.value.includes('@') && passwordState.value.trim().length > 6\n  //   );\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    dispatchPassword({type: 'USER_INPUT', val: event.target.value});\n\n    // setFormIsValid(\n    //   emailState.isValid && passwordState.isValid\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type: 'INPUT_BLUR'});\n    //setEmailIsValid(emailState.isValid);\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({type: 'INPUT_BLUR'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid){\n      authCtx.onLogin(emailState.value, passwordState.value);\n    }else if(!emailIsValid){\n      //focus on first invalid input found\n      emailInputRef.current.focu();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n          ref={emailInputRef}\n          id=\"email\" \n          label=\"E-Mail\" \n          type=\"email\" \n          isValid={emailIsValid} \n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n          />\n          <Input \n            ref={passwordInputRef}\n            id=\"password\" \n            label=\"Password\" \n            type=\"password\" \n            isValid={passwordIsValid} \n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}